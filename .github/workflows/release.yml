name: release

on:
  release:
    types: [publish]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |        
        sudo apt-get update && \
        sudo apt-get install -y \
        cmake \
        cmake-curses-gui \
        gdb \
        git \
        g++ \
        libbz2-dev \
        libcurl4-openssl-dev \
        libfreetype6-dev \
        libgeoip-dev \
        libglew-dev \
        libjpeg-dev \
        libmysqlclient-dev \
        libncursesw5-dev \
        libogg-dev \
        libopenal-dev \
        libsdl1.2-dev \
        libsdl2-dev \
        libtdb-dev \
        libvorbis-dev \
        mysql-client \
        ncurses-dev \
        opencl-dev \
        rsync \
        tmux \
        zip && \
        sudo apt-get clean
    - name: Compile
      run: |
        ./sp-tools.sh default_config
        ./sp-tools.sh init
        # following fails because of shallow clone on checkout
        #./sp-tools.sh install_default_paks 
        ./sp-tools.sh configure_cmake both
        ./sp-tools.sh build both
    - name: Dist package
      id: dist
      run: |
        source config.sh
        cd basepath/
        export DIST_FILE="${GAME_APP_NAME}-${GAME_APP_VERSION}-${GAME_APP_STAGE}.zip"
        echo "::set-output name=dist-file::$(echo ${DIST_FILE})"
        zip -r "../${DIST_FILE}" .
        echo "::set-output name=game-app-name::$(echo $GAME_APP_NAME)"
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.dist.outputs.game-app-name }}
        draft: true
        prerelease: true

    - name: Upload Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./${{ steps.dist.outputs.dist-file }}"
        asset_name: "${{ steps.dist.outputs.game-app-name }}"
        asset_content_type: application/zip

    - name: Publish Release - testing, disabled
      if: false
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
      
    - name: Publish Release (alternative) - testing, disabled
      if: false
      uses: elgohr/Github-Release-Action@master
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        args: MyReleaseMessage
